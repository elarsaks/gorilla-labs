version: "3.8"

services:
  gorilla-labs-nginx:
    image: nginx:alpine
    container_name: gorilla-labs-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./keys:/etc/nginx/ssl
    restart: always
    networks:
      - gorilla-net

  gorilla-labs-client:
    container_name: gorilla-labs-client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=true
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_LINKEDIN_CLIENT_ID=${NEXT_LINKEDIN_CLIENT_ID}
      - NEXT_LINKEDIN_CLIENT_SECRET=${NEXT_LINKEDIN_CLIENT_SECRET}
    restart: always
    volumes:
      - ./client:/app
      - ./client/node_modules:/app/node_modules
    networks:
      - gorilla-net

  gorilla-labs-api:
    container_name: gorilla-labs-api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    environment:
      - "TODO: DB Details"
    restart: always
    volumes:
      - ./api:/app
      - ./api/node_modules:/app/node_modules
    networks:
      - gorilla-net

    # TODO: DB
    # TODO: Vloumes for DB
    # TODO: volumes for Node modules

networks:
  gorilla-net:
    driver: bridge
